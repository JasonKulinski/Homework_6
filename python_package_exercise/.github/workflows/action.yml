name: Sort Lib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  # Ubuntu linting
  linting-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with black
        run: |
          python -m black --check --diff .
      - name: Lint with flake8
        run: |
          python -m flake8 . --show-source --statistics
  # Windows linting
  linting-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with black
        run: |
          python -m black --check --diff .
      - name: Lint with flake8
        run: |
          python -m flake8 . --show-source --statistics

  # MacOS linting
  linting-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with black
        run: |
          python -m black --check --diff .
      - name: Lint with flake8
        run: |
          python -m flake8 . --show-source --statistics

  #Ubuntu testing
  test-ubuntu:
        needs: [linting-ubuntu, linting-windows, linting-macos]
        strategy:
          matrix:
            python-version: [3.9, 3.10]
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
              python-version: ${{ matrix.python-version }}
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements-dev.txt
          - name: Test with pytest
            run: |
              python -m pytest
    # Windows testing
  test-windows:
        needs: [linting-ubuntu, linting-windows, linting-macos]
        strategy:
          matrix:
            python-version: [3.9, 3.10]
        runs-on: windows-latest
        steps:
        - uses: actions/checkout@v3
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements-dev.txt
        - name: Test with pytest
          run: |
            python -m pytest
    # MacOS testing
  test-macos:
    needs: [linting-ubuntu, linting-windows, linting-macos]
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Test with pytest
        run: |
          python -m pytest

  packaging-ubuntu:
    # only run the packaging if testing passed
    needs:  [test-ubuntu, test-windows, test-macos]
    strategy:
      matrix:
        python-version: [3.9, 3.10]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Build package
      run: |
        python -m build
        # see that the dist directory contains the wheel
        ls -la dist
    - name: Upload package
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: python-packages
        path: dist

  packaging-windows:
      needs: [test-ubuntu, test-windows, test-macos]
      strategy:
        matrix:
          python-version: [3.9, 3.10]
      runs-on: windows-latest
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
      - name: Build package
        run: |
          python -m build
          # see that the dist directory contains the wheel
          ls -la dist
      - name: Upload package
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: python-packages
          path: dist

  packaging-macos:
      needs: [test-ubuntu, test-windows, test-macos]
      strategy:
        matrix:
          python-version: [3.9, 3.10]
      runs-on: macos-latest
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
      - name: Build package
        run: |
          python -m build
          # see that the dist directory contains the wheel
          ls -la dist
      - name: Upload package
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: python-packages
          path: dist
